{"id":"components/BuilderField.vue","dependencies":[{"name":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/.babelrc","includedInParent":true,"mtime":1537474488486},{"name":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/package.json","includedInParent":true,"mtime":1543244669900},{"name":"./BuilderBlock.vue","loc":{"line":71,"column":25},"parent":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/src/components/BuilderField.vue","resolved":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/src/components/BuilderBlock.vue"},{"name":"_css_loader","parent":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/src/components/BuilderField.vue","resolved":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/node_modules/parcel-bundler/lib/builtins/css-loader.js"},{"name":"vue-hot-reload-api","parent":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/src/components/BuilderField.vue","resolved":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/node_modules/vue-hot-reload-api/dist/index.js"},{"name":"vue","parent":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/src/components/BuilderField.vue","resolved":"/Users/tim/Dropbox/Server/htdocs/sandbox/kirby-nightly/site/plugins/kirby-builder/node_modules/vue/dist/vue.runtime.esm.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _BuilderBlock = _interopRequireDefault(require(\"./BuilderBlock.vue\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _default = {\n  props: {\n    value: String,\n    fieldsets: Object,\n    columns: Number,\n    limit: Number,\n    label: String,\n    preview: Object,\n    pageId: String,\n    pageUid: String\n  },\n  components: {\n    BuilderBlock: _BuilderBlock.default\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.value) {\n      this.value.forEach(function (block, index) {\n        var fieldSet = _this.fieldsets[block._key];\n\n        _this.blocks.push(_this.newBlock(fieldSet, block._key, block, index));\n      });\n      this.lastUniqueKey = this.value.length;\n    }\n  },\n  data: function data() {\n    return {\n      blocks: [],\n      toggle: true,\n      targetPosition: null,\n      lastUniqueKey: 0,\n      dataField: {\n        label: 'date label',\n        type: 'date'\n      },\n      dateValue: null\n    };\n  },\n  computed: {\n    val: function val() {\n      return this.blocks.map(function (block) {\n        return block.content;\n      });\n    },\n    columnsCount: function columnsCount() {\n      return this.columns ? this.columns : '1';\n    },\n    columnWidth: function columnWidth() {\n      return this.columns ? '1/' + this.columns : '1/1';\n    },\n    draggableOptions: function draggableOptions() {\n      return {\n        group: 'kirby-builder',\n        put: 'kirby-builder',\n        clone: true,\n        forceFallback: true,\n        handle: '.kBuilder__dragDropHandle',\n        scroll: true\n      };\n    },\n    blockCount: function blockCount() {\n      return this.blocks.length;\n    },\n    fieldsetCount: function fieldsetCount() {\n      return Object.keys(this.fieldsets).length;\n    },\n    fieldsetKeys: function fieldsetKeys() {\n      return Object.keys(this.fieldsets);\n    },\n    addBlockButtonLabel: function addBlockButtonLabel() {\n      if (this.fieldsetCount == 1) {\n        return \"\".concat(this.$t('add'), \" \").concat(this.fieldsets[Object.keys(this.fieldsets)[0]].label);\n      } else {\n        return this.$t('add');\n      }\n    },\n    supportedBlockTypes: function supportedBlockTypes() {\n      return Object.keys(this.fieldsets);\n    }\n  },\n  methods: {\n    onBlockInput: function onBlockInput(event) {\n      this.$emit(\"input\", this.val);\n    },\n    onBlockMoved: function onBlockMoved(event) {\n      this.$emit(\"input\", this.val);\n    },\n    onBlockAdded: function onBlockAdded(event) {\n      this.$emit(\"input\", this.val);\n    },\n    onBlockRemoved: function onBlockRemoved(event) {\n      this.$emit(\"input\", this.val);\n    },\n    onMove: function onMove(event) {\n      //Prevent sorting behind last element that contains the add button\n      var isNotLastIndex = event.relatedContext.index != this.blocks.length + 1;\n      var isEmptyList = this.blocks.length == 0;\n      var isSupportedBlockType = this.supportedBlockTypes.includes(event.relatedContext.element.blockKey);\n      return (isEmptyList || isNotLastIndex) && isSupportedBlockType;\n    },\n    onClickAddBlock: function onClickAddBlock(position) {\n      this.targetPosition = position;\n\n      if (this.fieldsetCount == 1) {\n        this.addBlock(this.fieldsetKeys[0]);\n      } else {\n        this.$refs.dialog.open();\n      }\n    },\n    addBlock: function addBlock(key) {\n      var position = this.targetPosition == null ? this.blocks.length : this.targetPosition;\n      var fieldSet = this.fieldsets[key];\n      var newBlock = this.newBlock(fieldSet, key, this.getBlankContent(key, fieldSet), this.lastUniqueKey++);\n      newBlock.isNew = true;\n      this.blocks.splice(position, 0, JSON.parse(JSON.stringify(newBlock)));\n      this.$refs.dialog.close();\n      this.targetPosition = null;\n      this.$emit(\"input\", this.val);\n    },\n    getBlankContent: function getBlankContent(key, fieldSet) {\n      var content = {\n        '_key': key\n      };\n\n      if (fieldSet.fields) {\n        Object.keys(fieldSet.fields).forEach(function (fieldName) {\n          content[fieldName] = fieldSet.fields[fieldName].value || fieldSet.fields[fieldName].default || '';\n        });\n      } else if (fieldSet.tabs) {\n        for (var tabName in fieldSet.tabs) {\n          if (fieldSet.tabs.hasOwnProperty(tabName)) {\n            (function () {\n              var tab = fieldSet.tabs[tabName];\n              Object.keys(tab.fields).forEach(function (fieldName) {\n                content[fieldName] = tab.fields[fieldName].value || tab.fields[fieldName].default || '';\n              });\n            })();\n          }\n        }\n      }\n\n      return content;\n    },\n    cloneBlock: function cloneBlock(index) {\n      var clone = JSON.parse(JSON.stringify(this.blocks[index]));\n      clone.isNew = true;\n      this.deepRemoveProperty(clone.content, '_uid');\n      this.blocks.splice(index + 1, 0, clone);\n      this.blocks[index + 1].uniqueKey = this.lastUniqueKey++;\n      this.$emit(\"input\", this.val);\n    },\n    deleteBlock: function deleteBlock(index) {\n      this.clearLocalUiStates(this.blocks[index]);\n      this.blocks.splice(index, 1);\n      this.$emit(\"input\", this.val);\n    },\n    deepRemoveProperty: function deepRemoveProperty(obj, property) {\n      var _this2 = this;\n\n      Object.keys(obj).forEach(function (prop) {\n        if (prop === property) {\n          delete obj[prop];\n        } else if (_typeof(obj[prop]) === 'object') {\n          _this2.deepRemoveProperty(obj[prop], property);\n        }\n      });\n    },\n    clearLocalUiStates: function clearLocalUiStates(obj) {\n      for (var prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n          var element = obj[prop];\n\n          if (prop === '_uid') {\n            localStorage.removeItem(\"kBuilder.uiState.\".concat(obj[prop]));\n          } else if (_typeof(obj[prop]) === 'object') {\n            this.clearLocalUiStates(obj[prop]);\n          }\n        }\n      }\n    },\n    newBlock: function newBlock(fieldSet, key, content, uniqueKey) {\n      return {\n        fields: fieldSet.fields ? fieldSet.fields : null,\n        tabs: fieldSet.tabs ? fieldSet.tabs : null,\n        blockKey: key,\n        content: content,\n        label: fieldSet.label,\n        uniqueKey: uniqueKey,\n        preview: fieldSet.preview,\n        showPreview: false\n      };\n    }\n  }\n};\nexports.default = _default;\n        var $de0b8d = exports.default || module.exports;\n      \n      if (typeof $de0b8d === 'function') {\n        $de0b8d = $de0b8d.options;\n      }\n    \n        /* template */\n        Object.assign($de0b8d, (function () {\n          var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"k-field\",\n    {\n      staticClass: \"kBuilder\",\n      class: \"kBuilder--col-\" + _vm.columnsCount,\n      attrs: { label: _vm.label }\n    },\n    [\n      _c(\n        \"k-draggable\",\n        {\n          staticClass: \"kBuilder__blocks k-grid\",\n          attrs: { move: _vm.onMove, options: _vm.draggableOptions },\n          on: {\n            end: function($event) {\n              _vm.drag = false\n            },\n            update: _vm.onBlockMoved,\n            add: _vm.onBlockAdded,\n            remove: _vm.onBlockRemoved\n          },\n          model: {\n            value: _vm.blocks,\n            callback: function($$v) {\n              _vm.blocks = $$v\n            },\n            expression: \"blocks\"\n          }\n        },\n        [\n          _vm._l(_vm.blocks, function(block, index) {\n            return _c(\n              \"k-column\",\n              {\n                key: block.uniqueKey,\n                staticClass: \"kBuilder__column\",\n                attrs: { width: _vm.columnWidth }\n              },\n              [\n                _c(\"div\", {\n                  staticClass: \"kBuilder__inlineAddButton\",\n                  class: {\n                    \"kBuilder__inlineAddButton--horizontal\":\n                      _vm.columnsCount == 1,\n                    \"kBuilder__inlineAddButton--vertical\": _vm.columnsCount > 1\n                  },\n                  on: {\n                    click: function($event) {\n                      _vm.onClickAddBlock(index)\n                    }\n                  }\n                }),\n                _vm._v(\" \"),\n                _c(\"builder-block\", {\n                  attrs: {\n                    \"page-id\": _vm.pageId,\n                    \"page-uid\": _vm.pageUid,\n                    block: block,\n                    index: index,\n                    \"columns-count\": _vm.columnsCount,\n                    \"show-preview\": block.showPreview\n                  },\n                  on: {\n                    \"update:showPreview\": function($event) {\n                      _vm.$set(block, \"showPreview\", $event)\n                    },\n                    input: _vm.onBlockInput,\n                    clone: _vm.cloneBlock,\n                    delete: _vm.deleteBlock\n                  }\n                }),\n                _vm._v(\" \"),\n                _vm.columnsCount % index == 0 && _vm.columnsCount > 1\n                  ? _c(\"div\", {\n                      staticClass:\n                        \"kBuilder__inlineAddButton kBuilder__inlineAddButton--vertical kBuilder__inlineAddButton--after\",\n                      on: {\n                        click: function($event) {\n                          _vm.onClickAddBlock(index + 1)\n                        }\n                      }\n                    })\n                  : _vm._e()\n              ],\n              1\n            )\n          }),\n          _vm._v(\" \"),\n          !_vm.limit || _vm.blockCount < _vm.limit\n            ? _c(\n                \"k-column\",\n                { attrs: { width: _vm.columnWidth } },\n                [\n                  _c(\n                    \"k-button\",\n                    {\n                      staticClass: \"kBuilder__addButton\",\n                      attrs: { icon: \"add\" },\n                      on: {\n                        click: function($event) {\n                          _vm.onClickAddBlock()\n                        }\n                      }\n                    },\n                    [\n                      _vm._v(\n                        \"\\n        \" +\n                          _vm._s(_vm.addBlockButtonLabel) +\n                          \"\\n      \"\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            : _vm._e()\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"k-dialog\",\n        { ref: \"dialog\" },\n        [\n          _c(\n            \"k-list\",\n            _vm._l(_vm.fieldsets, function(value, key) {\n              return _c(\"k-list-item\", {\n                key: key,\n                staticClass: \"kBuilder__addBlockButton\",\n                attrs: { text: value.label },\n                on: {\n                  click: function($event) {\n                    _vm.addBlock(key)\n                  }\n                }\n              })\n            })\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n          return {\n            render: render,\n            staticRenderFns: staticRenderFns,\n            _compiled: true,\n            _scopeId: null,\n            functional: undefined\n          };\n        })());\n      \n    /* hot reload */\n    (function () {\n      if (module.hot) {\n        var api = require('vue-hot-reload-api');\n        api.install(require('vue'));\n        if (api.compatible) {\n          module.hot.accept();\n          if (!module.hot.data) {\n            api.createRecord('$de0b8d', $de0b8d);\n          } else {\n            api.reload('$de0b8d', $de0b8d);\n          }\n        }\n\n        \n        var reloadCSS = require('_css_loader');\n        module.hot.dispose(reloadCSS);\n        module.hot.accept(reloadCSS);\n      \n      }\n    })();","css":".kBuilder__addButton{\n  width: 100%;\n  background-color: transparent;\n  padding: calc(.625rem * 4) .75rem;\n  border: 1px dashed #CCC;\n  transition: background-color .3s, border-color .3s;\n}\n.kBuilder__addButton:hover{\n  background-color: #81a2be;\n  border-color: transparent;\n}\n.kBuilder__addBlockButton{\n  cursor: pointer;\n}\n.kBuilder .kBuilder--col-1{\n  padding-left: 25px;\n}\n.kBuilder__dragDropHandle{\n  width: 38px;\n  height: 38px;\n  color: #16171a;\n  opacity: .25;\n  z-index: 1;\n  cursor: -webkit-grab;\n  will-change: opacity,color;\n  transition: opacity .3s;\n}\n.kBuilder__dragDropHandle--col-1{\n  position: absolute;\n  left: -38px;\n  top: 0;\n  display: -ms-flexbox;\n  display: flex;\n  opacity: 0;\n}\n.kBuilder__blocks:hover .kBuilder__dragDropHandle,\nkBuilder__blocks:hover .kBuilder__dragDropHandle--col-1{\n  opacity: .25;\n}\n.kBuilder__block .kBuilder__dragDropHandle:hover,\nkBuilder__block:hover .kBuilder__dragDropHandle--col-1{\n  opacity: 1;\n}\n.kBuilder__inlineAddButton{\n  cursor: pointer;\n  position: absolute;\n  opacity: 0;\n  transition: opacity .3s;  \n}\n.kBuilder__inlineAddButton:hover{\n  opacity: 1;\n}\n.kBuilder__inlineAddButton::before{\n  content: \"\";\n  border-color: #4271ae;\n  border-style: dashed;\n  border-width: 0;\n  display: block;\n}\n.kBuilder__inlineAddButton--horizontal{\n  height: calc(.625rem * 2);\n  width: 100%;\n  bottom: 100%;\n}\n.kBuilder__inlineAddButton--horizontal::before{\n  border-bottom-width: 2px;\n  padding-top: calc(.625rem - 1px);\n}\n.kBuilder__inlineAddButton--vertical{\n  width: 1.5rem;\n  height: 100%;\n  right: 100%;\n}\n.kBuilder__inlineAddButton--vertical.kBuilder__inlineAddButton--after{\n  left: 100%;\n  right: auto;\n  top: 0;\n}\n.kBuilder__inlineAddButton--vertical::before{\n  width: calc(1.5rem / 2 + 1px);\n  height: 100%;\n  border-right-width: 2px;\n}\n\n/* .blocklist-item {\n  display: inline-block;\n  margin-right: 10px;\n} */\n.blocklist-enter-active, .blocklist-leave-active {\n  transition: all .5s;\n}\n.blocklist-enter, .blocklist-leave-to /* .list-leave-active below version 2.1.8 */ {\n  opacity: 0;\n  transform: translateY(-5%);\n}\n\n.kBuilder--col-1 .kBuilder__blocks{\n  grid-row-gap: calc(.625rem * 2);\n}\n\n.kBuilder__column{\n  position: relative;\n}\n\n.kBuilder__previewFrame{\n  width: 100%;\n  height: 30px;\n  border: none;\n  display: block;\n}\n.kBuilder__previewFrame--hidden{\n  display: none;\n}\n\n.kBuilder__blockContent--hidden{\n  display: none;\n}\n\n.sortable-ghost .kBuilder__previewFrame{\n  pointer-events: none;\n}"},"hash":"a2f55a1d15996f64e652d2bdf0a5030f","cacheData":{"env":{}}}